<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE section [
<!ENTITY % BOOK_ENTITIES SYSTEM "../../SIMP_Documentation.ent">
%BOOK_ENTITIES;
]>
<section id="sect-ug-Puppet_Server_NAT" >
  <title id="sect-ug-Puppet_Server_NAT-title">Puppet Server Behind a NAT</title>
  <para>
    This section provides guidance for when the Puppet server is behind a NAT
    but is managing hosts outside the NAT.
  </para>
  <para>
    To resolve this issue, open the <emphasis role="italic">/etc/puppet/manifests/vars.pp</emphasis>
    file and rename the <emphasis role="bold">$puppet_servers</emphasis> variable to
    <emphasis role="bold">$puppet_server_hosts_mod</emphasis>. Then, create a new
    <emphasis role="bold">$puppet_servers</emphasis> variable
    and point it to <emphasis role="italic">template('site/nat_ip_switch.erb')</emphasis>.
  </para>
  <para>
    The entries in <emphasis role="italic">vars.pp</emphasis> should look like
    the following example.
  </para>
    <example>
      <title>Sample Entries in <emphasis role="italic">vars.pp</emphasis></title>
      <indexterm>
        <primary>Examples</primary>
        <secondary>Sample Entries in <emphasis role="italic">vars.pp</emphasis></secondary>
      </indexterm>
      <indexterm>
        <primary>NAT</primary>
        <seealso>Examples</seealso>
      </indexterm>
      <indexterm>
        <primary>vars.pp</primary>
        <seealso>Examples</seealso>
      </indexterm>
      <programlisting language="Ruby">
       $puppet_server_hosts_mod = "puppet.$dns_domain|1.2.3.4 puppet2.$dns_domain|2.3.4.5"
       $puppet_servers = template('site/nat_ip_switch.erb')
      </programlisting>
    </example>
  <para>
    Create a <emphasis role="italic">/etc/puppet/modules/site/templates/nat_ip_switch.erb</emphasis>
    file with the content shown in the next example. Change the appropriate
    portions of the content to meet the needs of the user environment.
  </para>
  <important>
  <para>
    Ensure that the <emphasis role="italic">.erb</emphasis> file is owned by
    <emphasis role="italic">root.puppet</emphasis> and mode <emphasis role="italic">640</emphasis>.
  </para>
  </important>
    <example>
      <title>Code to Create the <emphasis role="italic">nat_ip_switch.erb</emphasis> File</title>
      <indexterm>
        <primary>Source</primary>
        <secondary>Create the <emphasis role="italic">nat_ip_switch.erb</emphasis> File</secondary>
      </indexterm>
      <indexterm>
        <primary>NAT</primary>
        <seealso>Examples</seealso>
      </indexterm>
      <programlisting language="Ruby">
        &lt;%
        # Edit this variable to provide the IP address mappings.
        # The left-hand side should contain the internal addresses.
        # The right-hand side should contain the external addresses.
        t_ipmap = {
            "1.2.3.4" =&gt; "10.10.10.10",
            "2.3.4.5" =&gt; '10.2.3.4'
        }

        # Edit this regex to match the hosts.
        # This is done with a Regexp; the user can use whichever is preferred.
        # Pure IP matching would be faster using the IPAddr class.
        t_inside_nets = Regexp.new("^5\.*")

        t_pupsrvs = puppet_server_hosts_mod.split(/\s|,|;/)

        # Change the ipaddress variable to the host that the regexp above is matching.
        if not t_inside_nets.match(ipaddress) then
          t_pupsrvs.each_index do |t_i|
            t_vals = t_pupsrvs[t_i].split(/\|/)
            if t_ipmap.include?(t_vals.last) then
              t_vals[-1] = t_ipmap[t_vals.last]
              t_pupsrvs[t_i] = t_vals.join('|')
            end
          end

          t_pupsrvs = t_pupsrvs.join(' ')
        end
        -%&gt;
        &lt;%= t_pupsrvs -%&gt;
      </programlisting>
    </example>
  <para>
    Run <emphasis role="bold">puppet agent -t</emphasis> on the client to
    receive the appropriately mapped NAT address of the Puppet server.
  </para>
  <para>
    If the user cannot connect to the NAT'd Puppet server,
    change the values in the <emphasis role="italic">/etc/hosts</emphasis>
    directory to the correct values and try running
    <emphasis role="bold">puppet agent -t</emphasis> again.
  </para>
</section>
