<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE section [
<!ENTITY % BOOK_ENTITIES SYSTEM "../../SIMP_Documentation.ent">
%BOOK_ENTITIES;
]>
<section id="sect-ug-Override_Security_Module" >
  <title id="sect-ug-Override_Security_Module-title">Overriding the Security Module</title>
  <para>
    The section explains how to override the security module.
  </para>
  <section id="sect-ug-Override_Security_Module-override-intro">
   <title>Introduction</title>
    <para>
     SIMP includes a module that applies a large set of security-related
     enforcements to the systems to which it is installed. This module
     resides in <emphasis role="italic">/etc/puppet/modules/sec</emphasis>.
    </para>
    <para>
     It is recommended that any changes the user needs to make to a
     base module are done via overrides instead of modifying the
     base module itself. There are two reasons for this approach: to avoid
     breaking other logic within the module hierarchies and to avoid
     erasing all changes by updating the base module via
     <xref linkend="ug-glossary-rpm-desc"
            endterm="ug-rpm-term" />.
    </para>
  </section>
  <section id="sect-ug-Override_Security_Module-override-step1">
   <title>Split the Application of the Security Settings</title>
    <para>
     First, break the security settings out of the default application
     to the nodes. To do this, enter information similar to the example
     structure below in the <emphasis role="italic">site.pp</emphasis>
     or imported file.
    </para>
    <example>
        <title>Code to Break Out Security Settings from the Application</title>
        <indexterm>
          <primary>Source</primary>
          <secondary>Break Out Security Settings from the Application</secondary>
        </indexterm>
        <indexterm>
          <primary>override security</primary>
         <seealso>Source</seealso>
        </indexterm>
        <programlisting language="Ruby">
        class base_config {


          import "common"
          include "common"
          &lt;etc../...&gt;

          &lt; Actions normally done to a node
          in the site. &gt;
        }

        class secure_config inherits base_config {


          include "sec::advanced"
        }

        node default {


          include "secure_config"
        }
        </programlisting>
    </example>
    <para>
     By entering this information, the user can ensure that all
     nodes that are built have the advanced security class applied
     to them if they are not otherwise defined.
    </para>
  </section>
  <section id="sect-ug-Override_Security_Module-override-step2">
   <title>Create the Override Class</title>
    <para>
     After providing the logical separation needed to apply the security
     settings separately from the rest of the site configuration, create
     a class that overrides <emphasis role="italic">sec::advanced</emphasis>.
    </para>
    <para>
     In the example below, creating an override class is done via a
     site module. The information can also be included in the
     <emphasis role="italic">site.pp</emphasis>; however, the site module is
     more flexible.
    </para>
    <para>
     The table below lists the steps to create the module directories.
    </para>
    <table frame="all">
        <title>Create the Module Directories Procedure</title>
        <tgroup cols="2" align="left" colsep="1" rowsep="1">
          <colspec colnum="1" colname="c1" colwidth="*"/>
          <colspec colnum="2" colname="c2" colwidth="8*"/>
          <thead>
            <row>
              <entry>Step</entry>
              <entry>Process/Action</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry><orderedlist><listitem><para/></listitem></orderedlist></entry>
              <entry>Type <emphasis role="bold">cd /etc/puppet/modules;</emphasis></entry>
            </row>
            <row>
              <entry><orderedlist continuation="continues"><listitem><para/></listitem></orderedlist></entry>
              <entry>Type <emphasis role="bold">mkdir site;</emphasis></entry>
            </row>
            <row>
              <entry><orderedlist continuation="continues"><listitem><para/></listitem></orderedlist></entry>
              <entry>Type <emphasis role="bold">mkdir site/files;</emphasis></entry>
            </row>
            <row>
              <entry><orderedlist continuation="continues"><listitem><para/></listitem></orderedlist></entry>
              <entry>Type <emphasis role="bold">mkdir site/modules;</emphasis></entry>
            </row>
            <row>
              <entry><orderedlist continuation="continues"><listitem><para/></listitem></orderedlist></entry>
              <entry>Type <emphasis role="bold">mkdir site/templates;</emphasis></entry>
            </row>
            <row>
              <entry><orderedlist continuation="continues"><listitem><para/></listitem></orderedlist></entry>
              <entry>Type <emphasis role="bold">touch site/modules/init.pp;</emphasis></entry>
            </row>
            <row>
              <entry><orderedlist continuation="continues"><listitem><para/></listitem></orderedlist></entry>
              <entry>Type <emphasis role="bold">find site -type d -exec chmod 750 {} \;</emphasis></entry>
            </row>
            <row>
              <entry><orderedlist continuation="continues"><listitem><para/></listitem></orderedlist></entry>
              <entry>Type <emphasis role="bold">find site -type f -exec chmod 640 {} \;</emphasis></entry>
            </row>
            <row>
              <entry><orderedlist continuation="continues"><listitem><para/></listitem></orderedlist></entry>
              <entry>Type <emphasis role="bold">chown -R root.puppet site;</emphasis></entry>
            </row>
		      </tbody>
        </tgroup>
      </table>
    <para>
     Create the contents of the
     <emphasis role="italic">site/modules/init.pp</emphasis> file
     using the example below to override those portions of
     <emphasis role="italic">sec::advanced</emphasis>
     that need to be changed.
    </para>
    <example>
        <title>Code to Remove Security Module from Site Files</title>
        <indexterm>
          <primary>Examples</primary>
          <secondary>Remove Security Module from Site Files</secondary>
        </indexterm>
        <indexterm>
          <primary>override security</primary>
         <seealso>Examples</seealso>
        </indexterm>
        <programlisting language="Bash">
        class site::security_override inherits sec::advanced
        {


           if $security_override_enable_nfs == "true" {
             Service["nfs"] {
               enable =&gt; true,
               ensure =&gt; "running",
               hasrestart =&gt; true,
               hasstatus =&gt; false
             }
           }
         }
        </programlisting>
    </example>
    <para>
     By using the example, the
     <xref linkend="ug-glossary-nfs-desc"
            endterm="ug-nfs-term" />
     service will be enabled if, and only if, the
     <emphasis role="italic">$security_override_enable_nfs</emphasis>
     variable is set to the value <emphasis role="bold">true</emphasis>.
     </para>
    <important>
    <para>
     Variables in Puppet are dependent upon the parse order of the configuration files
     and cannot be overridden once defined.
    </para>
    </important>
  </section>
  <section id="sect-ug-Override_Security_Module-override-step3">
   <title>Create the Node with the Override</title>
    <para>
     Enter the information from the example below in
     <emphasis role="italic">site.pp</emphasis> or an included file.
    </para>
    <example>
        <title>Code to Set All Security Default Site Settings</title>
        <indexterm>
          <primary>Source</primary>
          <secondary>Set All Security Default Site Settings</secondary>
        </indexterm>
        <indexterm>
          <primary>security</primary>
         <seealso>Examples</seealso>
        </indexterm>
        <programlisting language="Ruby">
        node clientfqdn {

          # We need to do this to get all of the default site settings
          include "base_config"

          $security_override_enable_nfs = "true"
          include "site::security_override"
        }
        </programlisting>
    </example>
    <para>
     These steps for overriding the security module can be applied as
     needed to any of the base modules.
    </para>
  </section>
</section>
