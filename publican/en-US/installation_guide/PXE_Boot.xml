<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE chapter [
<!ENTITY % BOOK_ENTITIES SYSTEM "../SIMP_Documentation.ent">
%BOOK_ENTITIES;
]>
<section id="sect-ig-PXE_Boot-need">
  <title>Configure the PXE Boot</title>
  <para>
    In order to boot
    <xref linkend="ig-glossary-pxe-desc" endterm="ig-pxe-term" />
    clients, a copy of the ISOs for all versions of RHEL/CentOS being
    kickstarted is required.
  </para>
  <section id="sect-ig-PXE_Boot-kickstart">
    <title>Setting Up the Kickstart</title>
    <para>
      The system follows the standard kickstart model. Kickstart files are placed
      in the <emphasis role="italic">/var/www/ks</emphasis> directory. Custom packages are placed
      in an appropriate repository created under the <emphasis role="italic">/var/www/yum</emphasis>
      directory.
    </para>
    <para>
      Once the model is ready, the default SIMP settings provide access to the user's
      trusted subnets as defined in the <emphasis role="italic">/etc/puppet/hieradata/simp_def.yaml</emphasis>
      directory.
    </para>
    <para>
      The <emphasis role="italic">pupclient_x86_64.cfg</emphasis> file in the <emphasis role="italic">/var/www/ks</emphasis>
      directory is used as an example in the following sections.
    </para>
    <note>
      <para>
        Sample kickstart templates have been provided in the <emphasis role="italic">ks</emphasis>
        directory on the SIMP DVD at the <emphasis role="italic">root</emphasis> level.
      </para>
    </note>
  </section>
  <section id="sect-ig-PXE_Boot-TFTP">
    <title>Setting up TFTP</title>
    <para>
      This section describes the process of setting up static files and manifests for TFTP.
    </para>
    <section id="sect-ig-PXE_Boot-TFTP-static">
      <title>Static Files</title>
      <para>
      Type <emphasis role="bold">cd /var/simp/rsync/CentOS/&RHEL_MAJOR_VERSION;/tftpboot</emphasis>
      and then type <emphasis role="bold">ls</emphasis> to check for the existence of the
      <emphasis role="italic">/var/simp/rsync/CentOS/&RHEL_MAJOR_VERSION;/tftpboot/linux-install/rhel&lt;Version&gt;-&lt;Architecture&gt;</emphasis>
      directory.
      </para>
      <para>
        If the directory does not exist, create one in that location and add the
        <emphasis role="italic">vmlinuz</emphasis> and <emphasis role="italic">initrd.img</emphasis>
        files from the <emphasis role="italic">images/pxeboot</emphasis> directory
        of the SIMP DVD. An example is provided below for setting up the CentOS &RHEL_MAJOR_MINOR_VERSION; distribution.</para>
      <para>
        <itemizedlist mark="bullet">
          <listitem>
            <para>cd /var/simp/rsync/CentOS/&RHEL_MAJOR_VERSION;/tftpboot/linux-install</para>
          </listitem>
          <listitem>
            <para>mkdir centos&RHEL_MAJOR_MINOR_VERSION;_x86_64; cd centos&RHEL_MAJOR_MINOR_VERSION;_x86_64</para>
          </listitem>
          <listitem>
            <para>cp -p /var/www/yum/CentOS/&RHEL_MAJOR_MINOR_VERSION;/x86_64/images/pxeboot/* .</para>
          </listitem>
          <listitem>
            <para>cd ..</para>
          </listitem>
          <listitem>
            <para>chmod 640 centos&RHEL_MAJOR_MINOR_VERSION;_x86_64; chown root:nobody centos&RHEL_MAJOR_MINOR_VERSION;_x86_64</para>
          </listitem>
          <listitem>
            <para>unlink centos&RHEL_MAJOR_VERSION;_x86_64</para>
          </listitem>
          <listitem>
            <para>ln -s centos&RHEL_MAJOR_MINOR_VERSION;_x86_64 centos&RHEL_MAJOR_VERSION;_x86_64</para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <section id="sect-ig-PXE_Boot-Manifest">
      <title>Manifest</title>
      <para>
        Assuming that the Puppet server is being used, create and add the following example
        code to a site manifest,
        <emphasis role="italic">/etc/puppet/modules/site/manifests/tftpboot.pp</emphasis>.
        Keep in mind that the code varies based on the model being kickstarted.
      </para>
      <example>
        <title>Code for Setting Up TFTP on the Puppet Server</title>
        <indexterm>
          <primary>Source</primary>
          <secondary>Code for Setting Up TFTP on Puppet Server</secondary>
        </indexterm>
        <indexterm>
          <primary>TFTP</primary>
          <seealso>Examples</seealso>
        </indexterm>
        <programlisting language="Ruby">
        # Set KSSERVER statically or use Hiera for lookup
        class site::tftpboot {
          include 'tftpboot'

          tftpboot::linux_model { 'CentOS_&RHEL_MAJOR_VERSION;':
            kernel => 'centos&RHEL_MAJOR_VERSION;_x86_64/vmlinuz',
            initrd => 'centos&RHEL_MAJOR_VERSION;_x86_64/initrd.img',
            ks     => "http://KSSERVER/ks/pupclient_x86_64.cfg",
            extra  => "ksdevice=bootif\nipappend 2"
          }

          tftpboot::assign_host { 'default': model => 'CentOS_&RHEL_MAJOR_VERSION;' }
        }
        </programlisting>
      </example>
      <para>
        Next, add the tftpboot site manifest to your puppet server node via Hiera.
        If it does not already exist, create
        <emphasis role="italic">/etc/puppet/hieradata/hosts/your.server.fqdn.yaml</emphasis>.
        Add the following example code to that yaml file.
      </para>
      <example>
        <title>Adding TFTP Site Manifest to Hiera</title>
        <indexterm>
          <primary>Source</primary>
          <secondary>Adding TFTP Site Manifest to Hiera</secondary>
        </indexterm>
        <indexterm>
          <primary>TFTP</primary>
          <seealso>Examples</seealso>
        </indexterm>
        <programlisting language="XML">
        ---
        classes:
          - 'site::tftpboot'
        </programlisting>
      </example>
      <para>
        After updating the above file, type
        <emphasis role="bold">puppet agent -t --tags tftpboot</emphasis>
        on the Puppet server.
      </para>
    </section>
  </section>
</section>
